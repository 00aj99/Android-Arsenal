/*
 *  Copyright (c) 2017.  Joe
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.lovejjfg.arsenal"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BUGLY", '"e179ce3705"'

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            buildConfigField "String", "CHANNEL", '"dev"'
        }
//        xiaomi {
//            buildConfigField "String", "CHANNEL", '"xiaomi"'
//        }
//        google {
//            buildConfigField "String", "CHANNEL", '"google"'
//        }
//        github {
//            buildConfigField "String", "CHANNEL", '"github"'
//        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.lovejjfg.powerrecycle:powerrecycle:1.0.5'
    compile 'io.reactivex:rxjava:1.1.1'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.google.code.gson:gson:2.4'


    compile "com.android.support:appcompat-v7:${SUPPORT_V7_VERSION}"
    compile "com.android.support:palette-v7:${SUPPORT_V7_VERSION}"
    compile "com.android.support:design:${SUPPORT_V7_VERSION}"
    compile "com.android.support:cardview-v7:${SUPPORT_V7_VERSION}"

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'

    compile 'org.jsoup:jsoup:1.8.3'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    //bugly
    compile 'com.tencent.bugly:crashreport:latest.release'

    testCompile "org.powermock:powermock-module-junit4:1.6.2"
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.2"
    testCompile "org.powermock:powermock-api-mockito:1.6.2"
    testCompile "org.powermock:powermock-classloading-xstream:1.6.2"
    testCompile 'junit:junit:4.12'

    compile project(':library')
}

afterEvaluate {
    task checkstyle(type: Checkstyle) {
        configFile file("${project.rootDir}/checkstyle.xml")
        source 'src'
        include '**/*.java'
        exclude '**/gen/**'
        classpath = files()
    }
    checkstyle {
        toolVersion = '7.3'
        configFile = rootProject.file('checkstyle.xml')
        configProperties.checkStyleConfigDir = rootProject.rootDir
    }

    check.dependsOn('checkstyle')

    findbugs {
        toolVersion = '3.0.1'
    }
    task findbugs(type: FindBugs) {

        description 'Run findbugs'
        group 'verification'

        classes = fileTree('build/intermediates/classes/debug/')
        source = fileTree('src/main/java')
        classpath = project.configurations.compile

        effort = 'max'

        excludeFilter = file("findbugs-exclude.xml")

        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    check.dependsOn('findbugs')

    pmd {
        toolVersion '5.4.0'
    }

    task pmd(type: Pmd) {
//        targetJdk = TargetJdk.VERSION_1_7

        description 'Run pmd'
        group 'verification'

        // If ruleSets is not empty, it seems to contain some
        // defaults which override rules in the ruleset file...
        ruleSets = []
        ruleSetFiles = files('pmd-ruleset.xml')
        source = fileTree('src/main/java')

        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    check.dependsOn('pmd')

}
